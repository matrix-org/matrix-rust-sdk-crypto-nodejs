name: Release Crypto-Node.js S390x

env:
  CARGO_TARGET_S390X_UNKNOWN_LINUX_GNU_LINKER: 's390x-linux-gnu-gcc'

on:
  push:
    tags:
      - v[0-9]+.*
  workflow_call:
    inputs:
      tag:
        description: "The tag to build with"
        required: true
        type: string

jobs:
  upload-assets:
    name: "Upload prebuilt libraries"
    strategy:
      fail-fast: true
      matrix:
        include:
          - target: s390x-unknown-linux-gnu
            os: ubuntu-20.04
            apt_install: gcc-s390x-linux-gnu g++-s390x-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
      # use the given tag
      - uses: actions/checkout@v3
        name: "Checking out ${{ inputs.tag }}"
        if: "${{ inputs.tag }}"
        with:
          ref: ${{ inputs.tag }}
      # use the default
      - uses: actions/checkout@v3
        if: "${{ !inputs.tag }}"
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
      - name: Install Node.js
        uses: actions/setup-node@v3
      - name: Load cache
        uses: Swatinem/rust-cache@v2
      - if: ${{ matrix.apt_install }}
        run: |
          sudo apt-get update
          sudo apt-get install -y zig ${{ matrix.apt_install }}
      - name: Build lib
        run: |
          npm install --ignore-scripts
          npx napi build --platform --release --strip --target ${{ matrix.target }}
      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "*.node"
